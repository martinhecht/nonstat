# library(lavaan)
## MH 2024-04-16: added reshape2 (seems to be needed for step "Transform df into a long format")
# library(reshape2)
( load( file=file.path( folder.main, "d.Rdata" ) ) )
## source theme for plot
source( file.path( folder.main, "..", "05_theme_for_plots.R" ) )
library(ggplot2)
library(grid)  # Needed for unit()
# Define the scale factor for rescaling d2
scale_factor <- max(d1$value) / max(d2$value)
ggplot() +
  # First dataset (d1) - Left Y-Axis
  geom_line(data = d1, aes(x = c1, y = value, linetype = par, color = "Cross-lagged effect"), size = 1) +
  geom_point(data = d1, aes(x = c1, y = value, color = "Cross-lagged effect"), size = 2) +
  # Second dataset (d2) - Right Y-Axis (rescaled)
  geom_line(data = d2, aes(x = c1, y = value * scale_factor, color = "Illusory Trait Variance", linetype = "RICLPMTYdelta12"), size = 1) +
  geom_point(data = d2, aes(x = c1, y = value * scale_factor, color = "Illusory Trait Variance"), size = 2) +
  # Line types mapping (renaming, including RICLPMTYdelta12 as solid)
  scale_linetype_manual(
    name = "Analysis Model",  # Updated legend title
    values = c("CLPMBYdeltaperc12" = "dashed", 
               "RICLPMBYdeltaperc12" = "dotted",
               "RICLPMTYdelta12" = "solid"),  # Assign solid to RICLPMTYdelta12
    labels = c("CLPMBYdeltaperc12" = "CLPM", 
               "RICLPMBYdeltaperc12" = "RI-CLPM", 
               "RICLPMTYdelta12" = "RI-CLPM")  # Display RI-CLPM for both
  ) +
  # Color settings with new legend labels
  scale_color_manual(
    values = c("Cross-lagged effect" = "blue", "Illusory Trait Variance" = "red"),
    name = "Parameter"  # Legend title for colors
  ) +
  # Primary and Secondary Y-Axis with updated labels
  scale_y_continuous(
    name = "Relative bias of cross-lagged effect (in %)",  # Updated left Y-axis label
    sec.axis = sec_axis(~ . / scale_factor, name = "Value of illusory trait variance")  # Updated right Y-axis label
  ) +
  # Remove plot title, keep x-axis label
  labs(x = "Number of confounding processes") +
  # Reorder legends: "Parameter" first, "Analysis Model" second
  guides(
    color = guide_legend(order = 1),  # "Parameter" first
    linetype = guide_legend(order = 2)  # "Analysis Model" second
  ) +
  theme_minimal() +
  theme(
    axis.title.y.right = element_text(color = "red"),  # Right Y-axis label in red
    axis.title.y.left = element_text(color = "blue"),   # Left Y-axis label in blue
    legend.key.width = unit(1.5, "cm"),  # Increase horizontal size
    legend.key.height = unit(0.5, "cm"),  # Keep vertical size small
    legend.position = c(0.05, 0.95),  # Move legend to the upper left corner
    legend.justification = c(0, 1)  # Align legend properly in the upper left
  )
sim <- "01"
print( platform <- .Platform$OS.type )
# library Pfad
if ( platform %in% "windows" ){
lib <- .libPaths()
folder.main.pre <- file.path( "c:/Users/martin/Dropbox/151_goodcontrols/03_illustration", sim )
} else if ( platform %in% "unix" ){
# lib <- "/home/mpib/hardt/29_ar1_jags/Rlib-3.3.3"
lib <- "/home/hechtmay/41_ctss/Rlib-3.6.1-ctsem2.9.6"
folder.main.pre <- file.path( "/home/hechtmay/84_optimalclpm/09_simulation", sim )
} else stop()
.libPaths(lib)
print( lib )
# Verzeichnisse
folder.main <- folder.main.pre
# folder.main <- file.path( folder.main.pre, "01_design_generation" )
# folder.out <- file.path( folder.main, "data" )
# if( !dir.exists( folder.out ) ) dir.create( folder.out, recursive=TRUE )
library(ggplot2, lib.loc=lib)
library(patchwork, lib.loc=lib)
# library(mvtnorm)
# library(psych)
# library(ggplot2)
# library(reshape)
# library(gridExtra)
# library(lavaan)
## MH 2024-04-16: added reshape2 (seems to be needed for step "Transform df into a long format")
# library(reshape2)
( load( file=file.path( folder.main, "d.Rdata" ) ) )
## source theme for plot
source( file.path( folder.main, "..", "05_theme_for_plots.R" ) )
library(ggplot2)
library(grid)  # Needed for unit()
# Define the scale factor for rescaling d2
scale_factor <- max(d1$value) / max(d2$value)
# Combine datasets and define a new "LegendLabel" column
d1$LegendLabel <- ifelse(d1$par == "CLPMBYdeltaperc12", 
                         "Cross-lagged effect (CLPM)", 
                         "Cross-lagged effect (RI-CLPM)")
d2$LegendLabel <- "Illusory Trait Variance (RI-CLPM)"
# Combine both datasets
d_combined <- rbind(d1, d2)
ggplot(d_combined, aes(x = c1, y = ifelse(LegendLabel == "Illusory Trait Variance (RI-CLPM)", value * scale_factor, value),
                        color = LegendLabel, linetype = LegendLabel)) +
  geom_line(size = 1) +
  geom_point(size = 2) +
  # Define manual color and line type scales
  scale_color_manual(
    name = "Legend",  # Single legend title
    values = c("Cross-lagged effect (CLPM)" = "blue", 
               "Cross-lagged effect (RI-CLPM)" = "blue", 
               "Illusory Trait Variance (RI-CLPM)" = "red")
  ) +
  scale_linetype_manual(
    name = "Legend",  # Match color legend
    values = c("Cross-lagged effect (CLPM)" = "dashed", 
               "Cross-lagged effect (RI-CLPM)" = "dotted", 
               "Illusory Trait Variance (RI-CLPM)" = "solid")
  ) +
  # Primary and Secondary Y-Axis with updated labels
  scale_y_continuous(
    name = "Relative bias of cross-lagged effect (in %)",  # Left Y-axis label
    sec.axis = sec_axis(~ . / scale_factor, name = "Value of illusory trait variance")  # Right Y-axis label
  ) +
  # Remove plot title, set x-axis label
  labs(x = "Number of confounding processes") +
  # Legend positioned in upper left
  theme_minimal() +
  theme(
    axis.title.y.right = element_text(color = "red"),  # Right Y-axis label in red
    axis.title.y.left = element_text(color = "blue"),   # Left Y-axis label in blue
    legend.position = c(0.05, 0.95),  # Move legend to the upper left corner
    legend.justification = c(0, 1),  # Align legend properly
    legend.key.width = unit(1.5, "cm"),  # Increase horizontal size
    legend.key.height = unit(0.5, "cm")  # Keep vertical size small
  )
sim <- "01"
print( platform <- .Platform$OS.type )
# library Pfad
if ( platform %in% "windows" ){
lib <- .libPaths()
folder.main.pre <- file.path( "c:/Users/martin/Dropbox/151_goodcontrols/03_illustration", sim )
} else if ( platform %in% "unix" ){
# lib <- "/home/mpib/hardt/29_ar1_jags/Rlib-3.3.3"
lib <- "/home/hechtmay/41_ctss/Rlib-3.6.1-ctsem2.9.6"
folder.main.pre <- file.path( "/home/hechtmay/84_optimalclpm/09_simulation", sim )
} else stop()
.libPaths(lib)
print( lib )
# Verzeichnisse
folder.main <- folder.main.pre
# folder.main <- file.path( folder.main.pre, "01_design_generation" )
# folder.out <- file.path( folder.main, "data" )
# if( !dir.exists( folder.out ) ) dir.create( folder.out, recursive=TRUE )
library(ggplot2, lib.loc=lib)
library(patchwork, lib.loc=lib)
# library(mvtnorm)
# library(psych)
# library(ggplot2)
# library(reshape)
# library(gridExtra)
# library(lavaan)
## MH 2024-04-16: added reshape2 (seems to be needed for step "Transform df into a long format")
# library(reshape2)
( load( file=file.path( folder.main, "d.Rdata" ) ) )
## source theme for plot
source( file.path( folder.main, "..", "05_theme_for_plots.R" ) )
library(ggplot2)
library(grid)  # Needed for unit()
# Define the scale factor for rescaling d2
scale_factor <- max(d1$value) / max(d2$value)
# Combine datasets and define a new "LegendLabel" column
d1$LegendLabel <- ifelse(d1$par == "CLPMBYdeltaperc12", 
                         "Cross-lagged effect (CLPM)", 
                         "Cross-lagged effect (RI-CLPM)")
d2$LegendLabel <- "Illusory Trait Variance (RI-CLPM)"
# Combine both datasets
d_combined <- rbind(d1, d2)
ggplot(d_combined, aes(x = c1, y = ifelse(LegendLabel == "Illusory Trait Variance (RI-CLPM)", value * scale_factor, value),
                        color = LegendLabel, linetype = LegendLabel)) +
  geom_line(size = 1) +
  geom_point(size = 2) +
  # Define manual color and line type scales
  scale_color_manual(
    name = "Parameter",  # Rename legend to "Parameter"
    values = c("Cross-lagged effect (CLPM)" = "blue", 
               "Cross-lagged effect (RI-CLPM)" = "blue", 
               "Illusory Trait Variance (RI-CLPM)" = "red")
  ) +
  scale_linetype_manual(
    name = "Parameter",  # Rename legend to "Parameter"
    values = c("Cross-lagged effect (CLPM)" = "dashed", 
               "Cross-lagged effect (RI-CLPM)" = "dotted", 
               "Illusory Trait Variance (RI-CLPM)" = "solid")
  ) +
  # Primary and Secondary Y-Axis with updated labels
  scale_y_continuous(
    name = "Relative bias of cross-lagged effect (in %)",  # Left Y-axis label
    sec.axis = sec_axis(~ . / scale_factor, name = "Value of illusory trait variance")  # Right Y-axis label
  ) +
  # Remove plot title, set x-axis label
  labs(x = "Number of confounding processes") +
  # Legend positioned in upper left
  theme_minimal() +
  theme(
    axis.title.y.right = element_text(color = "red"),  # Right Y-axis label in red
    axis.title.y.left = element_text(color = "blue"),   # Left Y-axis label in blue
    legend.position = c(0.05, 0.95),  # Move legend to the upper left corner
    legend.justification = c(0, 1),  # Align legend properly
    legend.key.width = unit(2, "cm"),  # Increase horizontal size to 2 cm
    legend.key.height = unit(0.5, "cm")  # Keep vertical size small
  )
sim <- "01"
print( platform <- .Platform$OS.type )
# library Pfad
if ( platform %in% "windows" ){
lib <- .libPaths()
folder.main.pre <- file.path( "c:/Users/martin/Dropbox/151_goodcontrols/03_illustration", sim )
} else if ( platform %in% "unix" ){
# lib <- "/home/mpib/hardt/29_ar1_jags/Rlib-3.3.3"
lib <- "/home/hechtmay/41_ctss/Rlib-3.6.1-ctsem2.9.6"
folder.main.pre <- file.path( "/home/hechtmay/84_optimalclpm/09_simulation", sim )
} else stop()
.libPaths(lib)
print( lib )
# Verzeichnisse
folder.main <- folder.main.pre
# folder.main <- file.path( folder.main.pre, "01_design_generation" )
# folder.out <- file.path( folder.main, "data" )
# if( !dir.exists( folder.out ) ) dir.create( folder.out, recursive=TRUE )
library(ggplot2, lib.loc=lib)
library(patchwork, lib.loc=lib)
# library(mvtnorm)
# library(psych)
# library(ggplot2)
# library(reshape)
# library(gridExtra)
# library(lavaan)
## MH 2024-04-16: added reshape2 (seems to be needed for step "Transform df into a long format")
# library(reshape2)
( load( file=file.path( folder.main, "d.Rdata" ) ) )
## source theme for plot
source( file.path( folder.main, "..", "05_theme_for_plots.R" ) )
library(ggplot2)
library(grid)  # Needed for unit()
# Define the scale factor for rescaling d2
scale_factor <- max(d1$value) / max(d2$value)
# Combine datasets and define a new "LegendLabel" column
d1$LegendLabel <- ifelse(d1$par == "CLPMBYdeltaperc12", 
                         "Cross-lagged effect (CLPM)", 
                         "Cross-lagged effect (RI-CLPM)")
d2$LegendLabel <- "Illusory Trait Variance (RI-CLPM)"
# Combine both datasets
d_combined <- rbind(d1, d2)
ggplot(d_combined, aes(x = c1, y = ifelse(LegendLabel == "Illusory Trait Variance (RI-CLPM)", value * scale_factor, value),
                        color = LegendLabel, linetype = LegendLabel)) +
  geom_line(size = 1) +
  geom_point(size = 2) +
  # Define manual color and line type scales
  scale_color_manual(
    name = "Parameter",  # Rename legend to "Parameter"
    values = c("Cross-lagged effect (CLPM)" = "blue", 
               "Cross-lagged effect (RI-CLPM)" = "blue", 
               "Illusory Trait Variance (RI-CLPM)" = "red")
  ) +
  scale_linetype_manual(
    name = "Parameter",  # Rename legend to "Parameter"
    values = c("Cross-lagged effect (CLPM)" = "dashed", 
               "Cross-lagged effect (RI-CLPM)" = "dotted", 
               "Illusory Trait Variance (RI-CLPM)" = "solid")
  ) +
  # Primary and Secondary Y-Axis with updated labels
  scale_y_continuous(
    name = "Relative bias of cross-lagged effect (in %)",  # Left Y-axis label
    sec.axis = sec_axis(~ . / scale_factor, name = "Value of illusory trait variance")  # Right Y-axis label
  ) +
  # Remove plot title, set x-axis label
  labs(x = "Number of confounding processes") +
  # Legend positioned in upper left
  theme +
  theme(
    axis.title.y.right = element_text(color = "red"),  # Right Y-axis label in red
    axis.title.y.left = element_text(color = "blue"),   # Left Y-axis label in blue
    legend.position = c(0.05, 0.95),  # Move legend to the upper left corner
    legend.justification = c(0, 1),  # Align legend properly
    legend.key.width = unit(2, "cm"),  # Increase horizontal size to 2 cm
    legend.key.height = unit(0.5, "cm")  # Keep vertical size small
  )
sim <- "01"
print( platform <- .Platform$OS.type )
# library Pfad
if ( platform %in% "windows" ){
lib <- .libPaths()
folder.main.pre <- file.path( "c:/Users/martin/Dropbox/151_goodcontrols/03_illustration", sim )
} else if ( platform %in% "unix" ){
# lib <- "/home/mpib/hardt/29_ar1_jags/Rlib-3.3.3"
lib <- "/home/hechtmay/41_ctss/Rlib-3.6.1-ctsem2.9.6"
folder.main.pre <- file.path( "/home/hechtmay/84_optimalclpm/09_simulation", sim )
} else stop()
.libPaths(lib)
print( lib )
# Verzeichnisse
folder.main <- folder.main.pre
# folder.main <- file.path( folder.main.pre, "01_design_generation" )
# folder.out <- file.path( folder.main, "data" )
# if( !dir.exists( folder.out ) ) dir.create( folder.out, recursive=TRUE )
library(ggplot2, lib.loc=lib)
library(patchwork, lib.loc=lib)
# library(mvtnorm)
# library(psych)
# library(ggplot2)
# library(reshape)
# library(gridExtra)
# library(lavaan)
## MH 2024-04-16: added reshape2 (seems to be needed for step "Transform df into a long format")
# library(reshape2)
( load( file=file.path( folder.main, "d.Rdata" ) ) )
## source theme for plot
source( file.path( folder.main, "..", "05_theme_for_plots.R" ) )
library(ggplot2)
library(grid)  # Needed for unit()
# Define the scale factor for rescaling d2
scale_factor <- max(d1$value) / max(d2$value)
# Combine datasets and define a new "LegendLabel" column
d1$LegendLabel <- ifelse(d1$par == "CLPMBYdeltaperc12", 
                         "Cross-lagged effect (CLPM)", 
                         "Cross-lagged effect (RI-CLPM)")
d2$LegendLabel <- "Illusory Trait Variance (RI-CLPM)"
# Combine both datasets
d_combined <- rbind(d1, d2)
ggplot(d_combined, aes(x = c1, y = ifelse(LegendLabel == "Illusory Trait Variance (RI-CLPM)", value * scale_factor, value),
                        color = LegendLabel, linetype = LegendLabel)) +
  geom_line(size = 1) +
  geom_point(size = 2) +
  # Define manual color and line type scales
  scale_color_manual(
    name = "Parameter",  # Rename legend to "Parameter"
    values = c("Cross-lagged effect (CLPM)" = "blue", 
               "Cross-lagged effect (RI-CLPM)" = "blue", 
               "Illusory Trait Variance (RI-CLPM)" = "red")
  ) +
  scale_linetype_manual(
    name = "Parameter",  # Rename legend to "Parameter"
    values = c("Cross-lagged effect (CLPM)" = "dashed", 
               "Cross-lagged effect (RI-CLPM)" = "dotted", 
               "Illusory Trait Variance (RI-CLPM)" = "solid")
  ) +
  # Primary and Secondary Y-Axis with updated labels
  scale_y_continuous(
    name = "Relative bias of cross-lagged effect (in %)\n",  # Left Y-axis label
    sec.axis = sec_axis(~ . / scale_factor, name = "\nValue of illusory trait variance")  # Right Y-axis label
  ) +
  # Remove plot title, set x-axis label
  labs(x = "\nNumber of confounding processes") +
  # Legend positioned in upper left
  theme +
  theme(
    axis.title.y.right = element_text(color = "red"),  # Right Y-axis label in red
    axis.title.y.left = element_text(color = "blue"),   # Left Y-axis label in blue
    legend.position = c(0.05, 0.95),  # Move legend to the upper left corner
    legend.justification = c(0, 1),  # Align legend properly
    legend.key.width = unit(2, "cm"),  # Increase horizontal size to 2 cm
    legend.key.height = unit(0.5, "cm")  # Keep vertical size small
  )
sim <- "01"
print( platform <- .Platform$OS.type )
# library Pfad
if ( platform %in% "windows" ){
lib <- .libPaths()
folder.main.pre <- file.path( "c:/Users/martin/Dropbox/151_goodcontrols/03_illustration", sim )
} else if ( platform %in% "unix" ){
# lib <- "/home/mpib/hardt/29_ar1_jags/Rlib-3.3.3"
lib <- "/home/hechtmay/41_ctss/Rlib-3.6.1-ctsem2.9.6"
folder.main.pre <- file.path( "/home/hechtmay/84_optimalclpm/09_simulation", sim )
} else stop()
.libPaths(lib)
print( lib )
# Verzeichnisse
folder.main <- folder.main.pre
# folder.main <- file.path( folder.main.pre, "01_design_generation" )
# folder.out <- file.path( folder.main, "data" )
# if( !dir.exists( folder.out ) ) dir.create( folder.out, recursive=TRUE )
library(ggplot2, lib.loc=lib)
library(patchwork, lib.loc=lib)
# library(mvtnorm)
# library(psych)
# library(ggplot2)
# library(reshape)
# library(gridExtra)
# library(lavaan)
## MH 2024-04-16: added reshape2 (seems to be needed for step "Transform df into a long format")
# library(reshape2)
( load( file=file.path( folder.main, "d.Rdata" ) ) )
## source theme for plot
source( file.path( folder.main, "..", "05_theme_for_plots.R" ) )
library(ggplot2)
library(grid)  # Needed for unit()
# Define the scale factor for rescaling d2
scale_factor <- max(d1$value) / max(d2$value)
# Combine datasets and define a new "LegendLabel" column
d1$LegendLabel <- ifelse(d1$par == "CLPMBYdeltaperc12", 
                         "Cross-lagged effect (CLPM)", 
                         "Cross-lagged effect (RI-CLPM)")
d2$LegendLabel <- "Illusory Trait Variance (RI-CLPM)"
# Combine both datasets
d_combined <- rbind(d1, d2)
ggplot(d_combined, aes(x = c1, y = ifelse(LegendLabel == "Illusory Trait Variance (RI-CLPM)", value * scale_factor, value),
                        color = LegendLabel, linetype = LegendLabel)) +
  geom_line(size = 1) +
  geom_point(size = 2) +
  # Define manual color and line type scales
  scale_color_manual(
    name = "Parameter",  # Rename legend to "Parameter"
    values = c("Cross-lagged effect (CLPM)" = "blue", 
               "Cross-lagged effect (RI-CLPM)" = "blue", 
               "Illusory Trait Variance (RI-CLPM)" = "red")
  ) +
  scale_linetype_manual(
    name = "Parameter",  # Rename legend to "Parameter"
    values = c("Cross-lagged effect (CLPM)" = "dashed", 
               "Cross-lagged effect (RI-CLPM)" = "dotted", 
               "Illusory Trait Variance (RI-CLPM)" = "solid")
  ) +
  # Primary and Secondary Y-Axis with updated labels
  scale_y_continuous(
    name = "Relative bias of cross-lagged effect (in %)\n",  # Left Y-axis label
    sec.axis = sec_axis(~ . / scale_factor, name = "Value of illusory trait variance\n")  # Right Y-axis label
  ) +
  # Remove plot title, set x-axis label
  labs(x = "\nNumber of confounding processes") +
  # Legend positioned in upper left
  theme +
  theme(
    axis.title.y.right = element_text(color = "red"),  # Right Y-axis label in red
    axis.title.y.left = element_text(color = "blue"),   # Left Y-axis label in blue
    legend.position = c(0.05, 0.95),  # Move legend to the upper left corner
    legend.justification = c(0, 1),  # Align legend properly
    legend.key.width = unit(2, "cm"),  # Increase horizontal size to 2 cm
    legend.key.height = unit(0.5, "cm")  # Keep vertical size small
  )
sim <- "01"
print( platform <- .Platform$OS.type )
# library Pfad
if ( platform %in% "windows" ){
lib <- .libPaths()
folder.main.pre <- file.path( "c:/Users/martin/Dropbox/151_goodcontrols/03_illustration", sim )
} else if ( platform %in% "unix" ){
# lib <- "/home/mpib/hardt/29_ar1_jags/Rlib-3.3.3"
lib <- "/home/hechtmay/41_ctss/Rlib-3.6.1-ctsem2.9.6"
folder.main.pre <- file.path( "/home/hechtmay/84_optimalclpm/09_simulation", sim )
} else stop()
.libPaths(lib)
print( lib )
# Verzeichnisse
folder.main <- folder.main.pre
# folder.main <- file.path( folder.main.pre, "01_design_generation" )
# folder.out <- file.path( folder.main, "data" )
# if( !dir.exists( folder.out ) ) dir.create( folder.out, recursive=TRUE )
library(ggplot2, lib.loc=lib)
library(patchwork, lib.loc=lib)
# library(mvtnorm)
# library(psych)
# library(ggplot2)
# library(reshape)
# library(gridExtra)
# library(lavaan)
## MH 2024-04-16: added reshape2 (seems to be needed for step "Transform df into a long format")
# library(reshape2)
( load( file=file.path( folder.main, "d.Rdata" ) ) )
## source theme for plot
source( file.path( folder.main, "..", "05_theme_for_plots.R" ) )
library(ggplot2)
library(grid)  # Needed for unit()
# Define the scale factor for rescaling d2
scale_factor <- max(d1$value) / max(d2$value)
# Combine datasets and define a new "LegendLabel" column
d1$LegendLabel <- ifelse(d1$par == "CLPMBYdeltaperc12", 
                         "Cross-lagged effect (CLPM)", 
                         "Cross-lagged effect (RI-CLPM)")
d2$LegendLabel <- "Illusory trait variance (RI-CLPM)"
# Combine both datasets
d_combined <- rbind(d1, d2)
ggplot(d_combined, aes(x = c1, y = ifelse(LegendLabel == "Illusory trait variance (RI-CLPM)", value * scale_factor, value),
                        color = LegendLabel, linetype = LegendLabel)) +
  geom_line(size = 1) +
  geom_point(size = 2) +
  # Define manual color and line type scales
  scale_color_manual(
    name = "Parameter",  # Rename legend to "Parameter"
    values = c("Cross-lagged effect (CLPM)" = "blue", 
               "Cross-lagged effect (RI-CLPM)" = "blue", 
               "Illusory trait variance (RI-CLPM)" = "red")
  ) +
  scale_linetype_manual(
    name = "Parameter",  # Rename legend to "Parameter"
    values = c("Cross-lagged effect (CLPM)" = "dashed", 
               "Cross-lagged effect (RI-CLPM)" = "dotted", 
               "Illusory trait variance (RI-CLPM)" = "solid")
  ) +
  # Primary and Secondary Y-Axis with updated labels
  scale_y_continuous(
    name = "Relative bias of cross-lagged effect (in %)\n",  # Left Y-axis label
    sec.axis = sec_axis(~ . / scale_factor, name = "Value of illusory trait variance\n")  # Right Y-axis label
  ) +
  # Remove plot title, set x-axis label
  labs(x = "\nNumber of confounding processes") +
  # Legend positioned in upper left
  theme +
  theme(
    axis.title.y.right = element_text(color = "red"),  # Right Y-axis label in red
    axis.title.y.left = element_text(color = "blue"),   # Left Y-axis label in blue
    legend.position = c(0.05, 0.95),  # Move legend to the upper left corner
    legend.justification = c(0, 1),  # Align legend properly
    legend.key.width = unit(2, "cm"),  # Increase horizontal size to 2 cm
    legend.key.height = unit(0.5, "cm")  # Keep vertical size small
  )
d1
d2
q()
